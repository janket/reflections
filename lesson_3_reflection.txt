use of GitHub

git remote	show all existing remotes	

git remote add "name of remote" "https: githubadress"	create new remote link to github

git remote -v 	show more information on a remote connection (verbose) as the remote adress

git push "name of remote" "branch of repository"	choose which branch or the repositroy to push towards github

Why might you want to always pull changes manually rather than
having Git automatically stay up-to-date with your remote repository?
You might not want to share all of your changes with others, so you will have more control of
what you want to share with others if you pull manually

_____________________
Forking a Repository		
	make a copy of a GitHub reposotpry only on GitHub without loading it to your computer

_____________________
Merge remote changess
	if a file is changed local and at GitHub without updading

git pull will automatically merge these files
	git fetch "remote description"	makes a new branch locally from the GitHub changes without affecting the original local version
					So no merging

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	forks	clone a repository only on GitHub
	clone	clone a repository from another location (GitHub) to your local repository
	branch	make a copy of a version to make changes without affecting the orignial version.

____________________
Fast-forwart Merges
	if you would like to merge a version with a hisoric file of the same version (so reachable in the branch)
	Only the label is updated since the historic version is al included in the newer version.

What is the benefit of having a copy of the last known stat of the remote sored locally?
	it is possible to make fast-forward merges

___________________

How would you collaborate without using Git or FitHub? What would be easier, and what would be harder?
	I would use a system like drpobox to share my versions within different directories.
	But merging would be harder and it would be also difficult to see which is the most actual version and
	where the versions splitted up.

__________________

When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?
	By collaboratin with others, your changes would like to be checked by other before merging.
	make changes directly in master can cause a loss of a working master branch.
	Merging own seperate branches first is a little bit more work, but ensures a good collaboration opportunity.

